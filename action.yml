name: 'Build Docs'

inputs:
  asdf-system:
    description: 'ASDF system to build system for'
    required: true
  qlfile-template:
    description: "Djula template for qlfile. All environment variables are available in it's context"
    required: false
  error-on-warnings:
    description: 'If documentation will generate any warnings, build will fail.'
    required: false
    default: true
  ngrok-auth-token:
    description: "A token to debug processes."
    required: false

runs:
  using: composite
  steps:
    - name: Checking Commit Message
      shell: bash
      run: |
        msg = $(git show -s --format='%s')
        if [[ "$msg" == 'Update docs' ]]; then
            echo 'Skipping documentation build because previous commit was documentation update.'
            exit 1
        fi
    - name: Install Documentation Builder
      if: ${{ success() }}
      shell: bash
      run: |
        echo ::group::Install Documentation Builder

        # qlfile might not have a new-line at the end
        # thus we have to add one just to be sure.
        echo '' >> qlfile

        if ! grep -q log4cl-extras qlfile; then
            echo 'github log4cl-extras 40ants/log4cl-extras' >> qlfile
        fi
        
        if ! grep -q docs-builder qlfile; then
            echo 'github docs-builder 40ants/docs-builder' >> qlfile
        fi

        if ! grep -q ngrok qlfile; then
            echo 'github ngrok 40ants/ngrok' >> qlfile
        fi
        
        qlot update

        qlot exec ros install docs-builder
        qlot exec ros install ngrok
        echo ::endgroup::
    - name: Build Docs
      id: build-docs
      if: ${{ success() }}
      shell: bash
      run: |
        set -Eeuo pipefail
        echo ::group::Build Docs

        qlot exec build-docs --error-on-warnings "${{ inputs.error-on-warnings }}" "${{ inputs.asdf-system }}" output.dir

        echo ::endgroup::

    - name: Upload Docs
      if: ${{ success() }}
      shell: bash
      run: |
        set -Eeuo pipefail
        echo ::group::Upload Docs

        qlot exec ${{ github.action_path }}/upload.ros "$(cat output.dir)"

        echo ::endgroup::
      env:
        GITHUB_TOKEN: ${{ github.token }}
        NGROK_AUTH_TOKEN: ${{ inputs.ngrok-auth-token }}

